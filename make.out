In file included from ./include/catmfs.h:10:0,
                 from catmfs.c:5:
./include/fs_node.h:18:40: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef uint32_t (*read_type_t)(struct fs_node *, uint32_t, uint32_t, uint8_t *);
                                        ^
./include/fs_node.h:18:40: warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
./include/fs_node.h:20:41: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef uint32_t (*write_type_t)(struct fs_node *, uint32_t, uint32_t, uint8_t *);
                                         ^
./include/fs_node.h:22:36: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef void (*open_type_t)(struct fs_node *);
                                    ^
./include/fs_node.h:24:37: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef void (*close_type_t)(struct fs_node *);
                                     ^
./include/fs_node.h:26:49: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef struct dirent *(*readdir_type_t)(struct fs_node *, uint32_t);
                                                 ^
catmfs.c: In function ‘catmfs_init’:
catmfs.c:20:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("data magic a:", data_magic_a);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/catmfs.h:8,
                 from catmfs.c:5:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘uint32_t *’
 void puthex(uint32_t n);
      ^
catmfs.c: In function ‘catmfs_read_inner’:
catmfs.c:39:9: warning: passing argument 2 of ‘memcpy’ makes pointer from integer without a cast [enabled by default]
         return (uint32_t) memcpy(buff, saddr, fs_obj->length - offset);
         ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘uint32_t’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
catmfs.c:41:9: warning: passing argument 2 of ‘memcpy’ makes pointer from integer without a cast [enabled by default]
         return (uint32_t) memcpy(buff, saddr, size);
         ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘uint32_t’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
catmfs.c: In function ‘catmfs_create_fs_node’:
catmfs.c:56:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(node, 0, sizeof(fs_node_t));
     ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct fs_node_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
catmfs.c:57:5: warning: pointer targets in passing argument 1 of ‘memcpy’ differ in signedness [-Wpointer-sign]
     memcpy(node->name, fs_obj->name, 256);
     ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:62:23: note: expected ‘unsigned char *’ but argument is of type ‘char *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
catmfs.c:57:5: warning: pointer targets in passing argument 2 of ‘memcpy’ differ in signedness [-Wpointer-sign]
     memcpy(node->name, fs_obj->name, 256);
     ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘char *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
catmfs.c:60:16: warning: assignment from incompatible pointer type [enabled by default]
     node->read = catmfs_read;
                ^
catmfs.c:61:17: warning: assignment from incompatible pointer type [enabled by default]
     node->write = catmfs_write;
                 ^
catmfs.c: In function ‘catmfs_findbyname’:
catmfs.c:71:17: warning: passing argument 1 of ‘catmfs_create_fs_node’ from incompatible pointer type [enabled by default]
                 *fs_node_out = catmfs_create_fs_node(table->objects[x].name);
                 ^
catmfs.c:49:12: note: expected ‘struct catmfs_obj_t *’ but argument is of type ‘char *’
 fs_node_t *catmfs_create_fs_node(catmfs_obj_t *fs_obj) {
            ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
catmfs.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from fs_node.c:5:0:
./include/fs_node.h:18:40: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef uint32_t (*read_type_t)(struct fs_node *, uint32_t, uint32_t, uint8_t *);
                                        ^
./include/fs_node.h:18:40: warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
./include/fs_node.h:20:41: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef uint32_t (*write_type_t)(struct fs_node *, uint32_t, uint32_t, uint8_t *);
                                         ^
./include/fs_node.h:22:36: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef void (*open_type_t)(struct fs_node *);
                                    ^
./include/fs_node.h:24:37: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef void (*close_type_t)(struct fs_node *);
                                     ^
./include/fs_node.h:26:49: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef struct dirent *(*readdir_type_t)(struct fs_node *, uint32_t);
                                                 ^
fs_node.c: In function ‘read_fs’:
fs_node.c:9:5: warning: passing argument 1 of ‘node->read’ from incompatible pointer type [enabled by default]
     return node->read(node, offset, size, buff);
     ^
fs_node.c:9:5: note: expected ‘struct fs_node *’ but argument is of type ‘struct fs_node_t *’
fs_node.c: In function ‘write_fs’:
fs_node.c:14:5: warning: passing argument 1 of ‘node->write’ from incompatible pointer type [enabled by default]
     return node->write(node, offset, size, buff);
     ^
fs_node.c:14:5: note: expected ‘struct fs_node *’ but argument is of type ‘struct fs_node_t *’
In file included from ./include/fs_node.h:8:0,
                 from fs_node.c:5:
fs_node.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
gdt.c: In function ‘gdt_flush’:
gdt.c:27:13: warning: assignment makes integer from pointer without a cast [enabled by default]
     gp.base = gdt_;
             ^
gdt.c:29:12: warning: type defaults to ‘int’ in declaration of ‘_gdt_flush’ [enabled by default]
     extern _gdt_flush();
            ^
In file included from include/gdt.h:8:0,
                 from gdt.c:5:
gdt.c: At top level:
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from ./include/heap_array_list.h:23:0,
                 from heap_array_list.c:5:
heap_array_list.c: In function ‘create_heap_array_list’:
./include/kmalloc.h:20:21: warning: initialization makes pointer from integer without a cast [enabled by default]
 #define kmalloc(sz) kmalloc_internal(sz,false,NULL,true)
                     ^
heap_array_list.c:8:32: note: in expansion of macro ‘kmalloc’
     heap_array_list_t *alist = kmalloc(sizeof(heap_array_list_t));
                                ^
heap_array_list.c:9:20: warning: assignment makes pointer from integer without a cast [enabled by default]
     alist->headers = kmalloc(sizeof(header_info_t) * max_size);
                    ^
heap_array_list.c: In function ‘insert_item_ordered’:
heap_array_list.c:22:13: warning: passing argument 1 of ‘dmemcpy’ from incompatible pointer type [enabled by default]
             dmemcpy(&al->headers[x + 1], &al->headers[x], sizeof(header_info_t) * (al->size - x));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:64:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *dmemcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c:22:13: warning: passing argument 2 of ‘dmemcpy’ from incompatible pointer type [enabled by default]
             dmemcpy(&al->headers[x + 1], &al->headers[x], sizeof(header_info_t) * (al->size - x));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:64:23: note: expected ‘const unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *dmemcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c:23:13: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
             memset(&al->headers[x], 0, sizeof(header_info_t));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
heap_array_list.c:24:13: warning: passing argument 1 of ‘memcpy’ from incompatible pointer type [enabled by default]
             memcpy(&al->headers[x], info, sizeof(header_info_t));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:62:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c:24:13: warning: passing argument 2 of ‘memcpy’ from incompatible pointer type [enabled by default]
             memcpy(&al->headers[x], info, sizeof(header_info_t));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c: In function ‘remove_item’:
heap_array_list.c:42:9: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
         memset(&al->headers[index], 0, sizeof(header_info_t));
         ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
heap_array_list.c:44:9: warning: passing argument 1 of ‘memcpy’ from incompatible pointer type [enabled by default]
         memcpy(&al->headers[index], &al->headers[index + 1], sizeof(header_info_t) * (al->size - index - 1));
         ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:62:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c:44:9: warning: passing argument 2 of ‘memcpy’ from incompatible pointer type [enabled by default]
         memcpy(&al->headers[index], &al->headers[index + 1], sizeof(header_info_t) * (al->size - index - 1));
         ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
heap.c: In function ‘hfree’:
heap.c:135:17: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
                 dumphex("combine next header:", next_header);
                 ^
In file included from ./include/system.h:4:0,
                 from ./include/heap.h:8,
                 from heap.c:5:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘struct hole_header_t *’
 void puthex(uint32_t n);
      ^
In file included from ./include/heap.h:8:0,
                 from heap.c:5:
heap.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
ide.c: In function ‘ide_read_buffer’:
ide.c:74:9: warning: passing argument 2 of ‘insl’ makes pointer from integer without a cast [enabled by default]
         insl(channels[channel].base + reg - 0x00, buffer, quads);
         ^
ide.c:56:20: note: expected ‘void *’ but argument is of type ‘unsigned int’
 static inline void insl(uint16_t port, void *addr, unsigned long count) {
                    ^
ide.c:76:9: warning: passing argument 2 of ‘insl’ makes pointer from integer without a cast [enabled by default]
         insl(channels[channel].base + reg - 0x06, buffer, quads);
         ^
ide.c:56:20: note: expected ‘void *’ but argument is of type ‘unsigned int’
 static inline void insl(uint16_t port, void *addr, unsigned long count) {
                    ^
ide.c:78:9: warning: passing argument 2 of ‘insl’ makes pointer from integer without a cast [enabled by default]
         insl(channels[channel].ctrl + reg - 0x0A, buffer, quads);
         ^
ide.c:56:20: note: expected ‘void *’ but argument is of type ‘unsigned int’
 static inline void insl(uint16_t port, void *addr, unsigned long count) {
                    ^
ide.c:80:9: warning: passing argument 2 of ‘insl’ makes pointer from integer without a cast [enabled by default]
         insl(channels[channel].bmide + reg - 0x0E, buffer, quads);
         ^
ide.c:56:20: note: expected ‘void *’ but argument is of type ‘unsigned int’
 static inline void insl(uint16_t port, void *addr, unsigned long count) {
                    ^
ide.c: In function ‘ide_initialize’:
ide.c:276:13: warning: pointer targets in passing argument 1 of ‘puts_’ differ in signedness [-Wpointer-sign]
             puts(ide_devices[i].model);
             ^
In file included from ./include/system.h:4:0,
                 from ./include/ide.h:8,
                 from ide.c:5:
./include/screen.h:48:5: note: expected ‘const char *’ but argument is of type ‘unsigned char *’
 int puts_(const char str[]);
     ^
ide.c: In function ‘ide_ata_access’:
ide.c:358:13: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
             if (err = ide_polling(channel, 1))
             ^
ide.c:364:13: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
             if (err = ide_polling(channel, 1))
             ^
ide.c:284:19: warning: variable ‘lba_io’ set but not used [-Wunused-but-set-variable]
     unsigned char lba_io[6];
                   ^
ide.c: In function ‘ide_read_sectors’:
ide.c:409:23: warning: variable ‘err’ set but not used [-Wunused-but-set-variable]
         unsigned char err;
                       ^
In file included from ./include/ide.h:8:0,
                 from ide.c:5:
ide.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
ide.c:12:22: warning: ‘atapi_packet’ defined but not used [-Wunused-variable]
 unsigned static char atapi_packet[12] = {0xA8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
                      ^
ide.c: In function ‘ide_read’:
ide.c:53:5: warning: ‘result’ may be used uninitialized in this function [-Wmaybe-uninitialized]
     return result;
     ^
idt.c: In function ‘idt_install’:
idt.c:28:15: warning: assignment makes integer from pointer without a cast [enabled by default]
     idtp.base = &idt;
               ^
idt.c:31:35: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(&idt, 0, sizeof(struct idt_entry) * 256);
                                   ^
In file included from include/idt.h:8:0,
                 from idt.c:5:
include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct idt_entry (*)[256]’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
idt.c:36:5: warning: implicit declaration of function ‘_idt_load’ [-Wimplicit-function-declaration]
     _idt_load();
     ^
In file included from include/idt.h:8:0,
                 from idt.c:5:
idt.c: At top level:
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from include/irqs.h:8:0,
                 from irqs.c:5:
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
isrs.c: In function ‘fault_handler’:
isrs.c:17:9: warning: unused variable ‘a’ [-Wunused-variable]
     int a = 0;
         ^
In file included from ./include/page.h:8:0,
                 from isrs.c:5:
isrs.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
keyboard.c: In function ‘keyboard_install’:
keyboard.c:59:5: warning: implicit declaration of function ‘irq_install_handler’ [-Wimplicit-function-declaration]
     irq_install_handler(1, keyboard_handler);
     ^
In file included from include/keyboard.h:8:0,
                 from keyboard.c:5:
keyboard.c: At top level:
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from keyboard.c:5:0:
include/keyboard.h:10:22: warning: ‘kbdus’ defined but not used [-Wunused-variable]
 static unsigned char kbdus[128] =
                      ^
In file included from kmalloc.c:5:0:
kmalloc.c: In function ‘kmalloc_internal’:
kmalloc.c:21:32: warning: comparison between pointer and integer [enabled by default]
     ASSERT(heap_placement_addr >= &end);
                                ^
./include/system.h:13:10: note: in definition of macro ‘ASSERT’
     if(!(x)){\
          ^
kmalloc.c:30:13: warning: passing argument 1 of ‘get_physical_address’ makes integer from pointer without a cast [enabled by default]
             *phys=get_physical_address(ret);
             ^
In file included from kmalloc.c:6:0:
./include/page.h:88:10: note: expected ‘uint32_t’ but argument is of type ‘void *’
 uint32_t get_physical_address(uint32_t va);
          ^
kmalloc.c:32:9: warning: return makes integer from pointer without a cast [enabled by default]
         return ret;
         ^
kmalloc.c: In function ‘kfree’:
kmalloc.c:50:5: warning: passing argument 2 of ‘hfree’ makes integer from pointer without a cast [enabled by default]
     hfree(kernel_heap, ptr);
     ^
In file included from include/kmalloc.h:9:0,
                 from kmalloc.c:8:
include/heap.h:40:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void hfree(heap_t *heap, uint32_t addr);
      ^
In file included from kmalloc.c:5:0:
kmalloc.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from ./include/catmfs.h:10:0,
                 from main.c:17:
./include/fs_node.h:18:40: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef uint32_t (*read_type_t)(struct fs_node *, uint32_t, uint32_t, uint8_t *);
                                        ^
./include/fs_node.h:18:40: warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
./include/fs_node.h:20:41: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef uint32_t (*write_type_t)(struct fs_node *, uint32_t, uint32_t, uint8_t *);
                                         ^
./include/fs_node.h:22:36: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef void (*open_type_t)(struct fs_node *);
                                    ^
./include/fs_node.h:24:37: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef void (*close_type_t)(struct fs_node *);
                                     ^
./include/fs_node.h:26:49: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef struct dirent *(*readdir_type_t)(struct fs_node *, uint32_t);
                                                 ^
main.c: In function ‘itoa’:
main.c:80:13: warning: pointer targets in passing argument 1 of ‘memcpy’ differ in signedness [-Wpointer-sign]
             memcpy(result, &result[x], x + 1);
             ^
main.c:21:16: note: expected ‘unsigned char *’ but argument is of type ‘char *’
 unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count) {
                ^
main.c:80:13: warning: pointer targets in passing argument 2 of ‘memcpy’ differ in signedness [-Wpointer-sign]
             memcpy(result, &result[x], x + 1);
             ^
main.c:21:16: note: expected ‘const unsigned char *’ but argument is of type ‘char *’
 unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count) {
                ^
main.c: In function ‘heap_test’:
main.c:118:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("alloced mem addr:", mem);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/isrs.h:8,
                 from main.c:1:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void puthex(uint32_t n);
      ^
main.c:120:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("alloced mem addr:", mem2);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/isrs.h:8,
                 from main.c:1:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void puthex(uint32_t n);
      ^
main.c:122:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("alloced mem addr:", mem3);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/isrs.h:8,
                 from main.c:1:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void puthex(uint32_t n);
      ^
main.c:127:5: warning: passing argument 2 of ‘hfree’ makes integer from pointer without a cast [enabled by default]
     hfree(heap, mem2);
     ^
In file included from ./include/kmalloc.h:9:0,
                 from main.c:3:
./include/heap.h:40:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void hfree(heap_t *heap, uint32_t addr);
      ^
main.c:130:5: warning: passing argument 2 of ‘hfree’ makes integer from pointer without a cast [enabled by default]
     hfree(heap, mem3);
     ^
In file included from ./include/kmalloc.h:9:0,
                 from main.c:3:
./include/heap.h:40:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void hfree(heap_t *heap, uint32_t addr);
      ^
main.c:134:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("alloced mem addr:", mem4);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/isrs.h:8,
                 from main.c:1:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void puthex(uint32_t n);
      ^
main.c:138:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("alloced mem addr:", mem5);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/isrs.h:8,
                 from main.c:1:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void puthex(uint32_t n);
      ^
main.c:141:5: warning: passing argument 2 of ‘hfree’ makes integer from pointer without a cast [enabled by default]
     hfree(heap, mem4);
     ^
In file included from ./include/kmalloc.h:9:0,
                 from main.c:3:
./include/heap.h:40:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void hfree(heap_t *heap, uint32_t addr);
      ^
main.c:144:5: warning: passing argument 2 of ‘hfree’ makes integer from pointer without a cast [enabled by default]
     hfree(heap, mem5);
     ^
In file included from ./include/kmalloc.h:9:0,
                 from main.c:3:
./include/heap.h:40:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void hfree(heap_t *heap, uint32_t addr);
      ^
main.c:147:5: warning: passing argument 2 of ‘hfree’ makes integer from pointer without a cast [enabled by default]
     hfree(heap, mem);
     ^
In file included from ./include/kmalloc.h:9:0,
                 from main.c:3:
./include/heap.h:40:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void hfree(heap_t *heap, uint32_t addr);
      ^
main.c: In function ‘catmfs_test’:
main.c:181:5: warning: passing argument 1 of ‘catmfs_init’ makes integer from pointer without a cast [enabled by default]
     catmfs_t *fs = catmfs_init(addr);
     ^
In file included from main.c:17:0:
./include/catmfs.h:14:11: note: expected ‘uint32_t’ but argument is of type ‘uint32_t *’
 catmfs_t *catmfs_init(uint32_t mem_addr);
           ^
main.c:184:5: warning: passing argument 2 of ‘catmfs_findbyname’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if (catmfs_findbyname(fs, STR("neko.1"), &node)) {
     ^
In file included from main.c:17:0:
./include/catmfs.h:29:9: note: expected ‘char *’ but argument is of type ‘const char *’
 uint8_t catmfs_findbyname(catmfs_t *fs, char *fn, fs_node_t **fs_node_out);
         ^
main.c:187:9: warning: pointer targets in passing argument 1 of ‘memset’ differ in signedness [-Wpointer-sign]
         memset(data, 0xCC, sizeof(char) * 250);
         ^
main.c:34:16: note: expected ‘unsigned char *’ but argument is of type ‘char *’
 unsigned char *memset(unsigned char *dest, unsigned char val, int count) {
                ^
main.c:188:9: warning: pointer targets in passing argument 4 of ‘read_fs’ differ in signedness [-Wpointer-sign]
         uint32_t count = read_fs(node, 0, 200, data);
         ^
In file included from ./include/catmfs.h:10:0,
                 from main.c:17:
./include/fs_node.h:48:10: note: expected ‘unsigned char *’ but argument is of type ‘char *’
 uint32_t read_fs(fs_node_t *node, uint32_t offset, uint32_t size, uint8_t *buff);
          ^
main.c: In function ‘ring3’:
main.c:205:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("ring3:", ring3);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/isrs.h:8,
                 from main.c:1:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘void (*)()’
 void puthex(uint32_t n);
      ^
main.c: In function ‘get_phy_test’:
main.c:235:19: warning: initialization makes pointer from integer without a cast [enabled by default]
     uint32_t *a = kmalloc_internal(10, false, &phy, true);
                   ^
main.c:236:5: warning: passing argument 1 of ‘get_physical_address’ makes integer from pointer without a cast [enabled by default]
     uint32_t geted_phy = get_physical_address(a);
     ^
In file included from ./include/heap.h:11:0,
                 from ./include/kmalloc.h:9,
                 from main.c:3:
./include/page.h:88:10: note: expected ‘uint32_t’ but argument is of type ‘uint32_t *’
 uint32_t get_physical_address(uint32_t va);
          ^
main.c:237:5: warning: large integer implicitly truncated to unsigned type [-Woverflow]
     *a = 0xFAFAFAFAF;
     ^
main.c: In function ‘usermode_test’:
main.c:255:5: warning: passing argument 1 of ‘get_physical_address’ makes integer from pointer without a cast [enabled by default]
     uint32_t  addr=get_physical_address(pd);
     ^
In file included from ./include/heap.h:11:0,
                 from ./include/kmalloc.h:9,
                 from main.c:3:
./include/page.h:88:10: note: expected ‘uint32_t’ but argument is of type ‘struct page_directory_t *’
 uint32_t get_physical_address(uint32_t va);
          ^
main.c:257:5: warning: passing argument 1 of ‘switch_page_directory’ makes pointer from integer without a cast [enabled by default]
     switch_page_directory(addr);
     ^
In file included from ./include/heap.h:11:0,
                 from ./include/kmalloc.h:9,
                 from main.c:3:
./include/page.h:76:6: note: expected ‘struct page_directory_t *’ but argument is of type ‘uint32_t’
 void switch_page_directory(page_directory_t *dir);
      ^
main.c:260:5: warning: passing argument 3 of ‘get_page’ makes pointer from integer without a cast [enabled by default]
     page_t* eipp= get_page(eip,false,addr);
     ^
In file included from ./include/heap.h:11:0,
                 from ./include/kmalloc.h:9,
                 from main.c:3:
./include/page.h:78:9: note: expected ‘struct page_directory_t *’ but argument is of type ‘uint32_t’
 page_t *get_page(uint32_t addr, int make, page_directory_t *dir);
         ^
main.c:249:14: warning: unused variable ‘phy’ [-Wunused-variable]
     uint32_t phy;
              ^
main.c: At top level:
main.c:279:5: warning: first argument of ‘main’ should be ‘int’ [-Wmain]
 int main(multiboot_info_t *mul_arg, uint32_t init_esp_arg) {
     ^
main.c:279:5: warning: second argument of ‘main’ should be ‘char **’ [-Wmain]
main.c: In function ‘main’:
main.c:286:5: warning: passing argument 1 of ‘memcpy’ from incompatible pointer type [enabled by default]
     memcpy(&mul, mul_arg, sizeof(multiboot_info_t));
     ^
main.c:21:16: note: expected ‘unsigned char *’ but argument is of type ‘struct multiboot_info_t *’
 unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count) {
                ^
main.c:286:5: warning: passing argument 2 of ‘memcpy’ from incompatible pointer type [enabled by default]
     memcpy(&mul, mul_arg, sizeof(multiboot_info_t));
     ^
main.c:21:16: note: expected ‘const unsigned char *’ but argument is of type ‘struct multiboot_info_t *’
 unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count) {
                ^
main.c:299:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("amem:", amem);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/isrs.h:8,
                 from main.c:1:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘void *’
 void puthex(uint32_t n);
      ^
In file included from main.c:2:0:
main.c: At top level:
./include/irqs.h:43:14: warning: ‘irq_routines’ defined but not used [-Wunused-variable]
 static void *irq_routines[16] = {
              ^
In file included from main.c:5:0:
./include/ide.h:14:20: warning: ‘outl’ declared ‘static’ but never defined [-Wunused-function]
 static inline void outl(uint32_t value, uint16_t port);
                    ^
./include/ide.h:16:24: warning: ‘inl’ declared ‘static’ but never defined [-Wunused-function]
 static inline uint32_t inl(uint16_t port);
                        ^
In file included from main.c:13:0:
include/keyboard.h:10:22: warning: ‘kbdus’ defined but not used [-Wunused-variable]
 static unsigned char kbdus[128] =
                      ^
main.c: In function ‘memcpy’:
main.c:25:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
main.c: In function ‘dmemcpy’:
main.c:32:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
main.c: In function ‘get_eip’:
main.c:231:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
main.c: Assembler messages:
main.c:228: Warning: indirect jmp without `*'
page.c: In function ‘alloc_frame’:
page.c:56:17: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
                 memset(page, 0, sizeof(page_t));
                 ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct page_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
page.c: In function ‘paging_install’:
page.c:94:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(frame_status, 0, sizeof(uint32_t) * frame_max_count);
     ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘uint32_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
page.c:96:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(kernel_dir, 0, sizeof(page_directory_t));
     ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct page_directory_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
page.c:97:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(kernel_dir->table_physical_addr, 0, sizeof(uint32_t) * 1024);
     ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘uint32_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
page.c:98:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(kernel_dir->tables, 0, sizeof(page_table_t *) * 1024);
     ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct page_table_t **’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
page.c:101:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("heap placement start:", &end);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/heap.h:8,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘uint32_t *’
 void puthex(uint32_t n);
      ^
page.c:103:9: warning: unused variable ‘i’ [-Wunused-variable]
     int i = 0;
         ^
page.c: In function ‘get_page’:
page.c:151:9: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
         memset(dir->tables[table_idx], 0, sizeof(page_table_t));
         ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct page_table_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
page.c: In function ‘page_fault_handler’:
page.c:181:9: warning: unused variable ‘id’ [-Wunused-variable]
     int id = r->err_code & 0x10;          // Caused by an instruction fetch?
         ^
page.c: In function ‘clone_page_table’:
page.c:216:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(target, 0, sizeof(page_table_t));
     ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct page_table_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
page.c: In function ‘clone_page_directory’:
page.c:234:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(target, 0, sizeof(page_directory_t));
     ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from page.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct page_directory_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
page.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from page.c:7:0:
./include/irqs.h:43:14: warning: ‘irq_routines’ defined but not used [-Wunused-variable]
 static void *irq_routines[16] = {
              ^
page.c: In function ‘clone_page_table’:
page.c:228:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
proc.c: In function ‘create_user_stack’:
proc.c:9:5: warning: implicit declaration of function ‘strformat’ [-Wimplicit-function-declaration]
     putf_const("creating user stack:%x %x\n", start_addr, size);
     ^
proc.c:30:19: warning: initialization makes pointer from integer without a cast [enabled by default]
     uint32_t *p = new_stack_pointer;
                   ^
proc.c:31:5: warning: passing argument 1 of ‘memcpy’ makes pointer from integer without a cast [enabled by default]
     memcpy(new_stack_pointer, old_stack_pointer, init_esp - old_stack_pointer);
     ^
In file included from ./include/page.h:8:0,
                 from ./include/proc.h:9,
                 from proc.c:5:
./include/system.h:62:23: note: expected ‘unsigned char *’ but argument is of type ‘uint32_t’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
proc.c:31:5: warning: passing argument 2 of ‘memcpy’ makes pointer from integer without a cast [enabled by default]
     memcpy(new_stack_pointer, old_stack_pointer, init_esp - old_stack_pointer);
     ^
In file included from ./include/page.h:8:0,
                 from ./include/proc.h:9,
                 from proc.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘uint32_t’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
proc.c:30:15: warning: unused variable ‘p’ [-Wunused-variable]
     uint32_t *p = new_stack_pointer;
               ^
In file included from ./include/page.h:8:0,
                 from ./include/proc.h:9,
                 from proc.c:5:
proc.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
screen.c: In function ‘putc’:
screen.c:56:13: warning: implicit declaration of function ‘scroll’ [-Wimplicit-function-declaration]
             scroll();
             ^
screen.c: In function ‘screenClear’:
screen.c:96:5: warning: passing argument 1 of ‘memset’ makes pointer from integer without a cast [enabled by default]
     memset(SCREEN_MEMORY_BASE, 0, SCREEN_MAX_Y * SCREEN_MAX_X * 2);
     ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from screen.c:4:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘int’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
screen.c: At top level:
screen.c:165:13: warning: conflicting types for ‘scroll’ [enabled by default]
 inline void scroll() {
             ^
screen.c:56:13: note: previous implicit declaration of ‘scroll’ was here
             scroll();
             ^
screen.c: In function ‘scroll’:
screen.c:170:9: warning: passing argument 1 of ‘memset’ makes pointer from integer without a cast [enabled by default]
         memset((SCREEN_MEMORY_BASE + ((SCREEN_MAX_Y - 1) * SCREEN_MAX_X) * 2), 0, SCREEN_MAX_X * 2);
         ^
In file included from ./include/heap.h:8:0,
                 from ./include/kmalloc.h:9,
                 from screen.c:4:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘int’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
screen.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from include/str.h:9:0,
                 from str.c:5:
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
str.c: In function ‘itohexs’:
str.c:138:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
str.c: In function ‘strformat’:
str.c:182:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
syscall.c: In function ‘syscall_install’:
syscall.c:9:5: warning: implicit declaration of function ‘idt_set_gate’ [-Wimplicit-function-declaration]
     idt_set_gate(0x60, (unsigned) _isr_syscall, 0x08, 0x8E);
     ^
syscall.c: In function ‘syscall_handler’:
syscall.c:13:5: warning: implicit declaration of function ‘strformat’ [-Wimplicit-function-declaration]
     putf_const("[SYSCALL][No:%x]\n", r->eax);
     ^
In file included from ./include/isrs.h:8:0,
                 from syscall.h:8,
                 from syscall.c:5:
syscall.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from include/timer.h:8:0,
                 from timer.c:5:
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from timer.c:6:0:
include/irqs.h:43:14: warning: ‘irq_routines’ defined but not used [-Wunused-variable]
 static void *irq_routines[16] = {
              ^
tss.c: In function ‘write_tss’:
tss.c:15:5: warning: implicit declaration of function ‘gdt_set_gate’ [-Wimplicit-function-declaration]
     gdt_set_gate(num, base, limit, 0xE9, 0x00);
     ^
tss.c:18:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(&tss_entry, 0, sizeof(tss_entry));
     ^
In file included from ./include/gdt.h:8:0,
                 from ./include/tss.h:9,
                 from tss.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct tss_entry_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
tss.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
In file included from ./include/heap_array_list.h:23:0,
                 from heap_array_list.c:5:
heap_array_list.c: In function ‘create_heap_array_list’:
./include/kmalloc.h:20:21: warning: initialization makes pointer from integer without a cast [enabled by default]
 #define kmalloc(sz) kmalloc_internal(sz,false,NULL,true)
                     ^
heap_array_list.c:8:32: note: in expansion of macro ‘kmalloc’
     heap_array_list_t *alist = kmalloc(sizeof(heap_array_list_t));
                                ^
heap_array_list.c:9:20: warning: assignment makes pointer from integer without a cast [enabled by default]
     alist->headers = kmalloc(sizeof(header_info_t) * max_size);
                    ^
heap_array_list.c: In function ‘insert_item_ordered’:
heap_array_list.c:22:13: warning: passing argument 1 of ‘dmemcpy’ from incompatible pointer type [enabled by default]
             dmemcpy(&al->headers[x + 1], &al->headers[x], sizeof(header_info_t) * (al->size - x));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:64:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *dmemcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c:22:13: warning: passing argument 2 of ‘dmemcpy’ from incompatible pointer type [enabled by default]
             dmemcpy(&al->headers[x + 1], &al->headers[x], sizeof(header_info_t) * (al->size - x));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:64:23: note: expected ‘const unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *dmemcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c:23:13: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
             memset(&al->headers[x], 0, sizeof(header_info_t));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
heap_array_list.c:24:13: warning: passing argument 1 of ‘memcpy’ from incompatible pointer type [enabled by default]
             memcpy(&al->headers[x], info, sizeof(header_info_t));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:62:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c:24:13: warning: passing argument 2 of ‘memcpy’ from incompatible pointer type [enabled by default]
             memcpy(&al->headers[x], info, sizeof(header_info_t));
             ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c: In function ‘remove_item’:
heap_array_list.c:42:9: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
         memset(&al->headers[index], 0, sizeof(header_info_t));
         ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
heap_array_list.c:44:9: warning: passing argument 1 of ‘memcpy’ from incompatible pointer type [enabled by default]
         memcpy(&al->headers[index], &al->headers[index + 1], sizeof(header_info_t) * (al->size - index - 1));
         ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:62:23: note: expected ‘unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c:44:9: warning: passing argument 2 of ‘memcpy’ from incompatible pointer type [enabled by default]
         memcpy(&al->headers[index], &al->headers[index + 1], sizeof(header_info_t) * (al->size - index - 1));
         ^
In file included from ./include/heap_array_list.h:8:0,
                 from heap_array_list.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘struct header_info_t *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
heap_array_list.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
heap.c: In function ‘hfree’:
heap.c:135:17: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
                 dumphex("combine next header:", next_header);
                 ^
In file included from ./include/system.h:4:0,
                 from ./include/heap.h:8,
                 from heap.c:5:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘struct hole_header_t *’
 void puthex(uint32_t n);
      ^
In file included from ./include/heap.h:8:0,
                 from heap.c:5:
heap.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
ide.c: In function ‘ide_read_buffer’:
ide.c:74:9: warning: passing argument 2 of ‘insl’ makes pointer from integer without a cast [enabled by default]
         insl(channels[channel].base + reg - 0x00, buffer, quads);
         ^
ide.c:56:20: note: expected ‘void *’ but argument is of type ‘unsigned int’
 static inline void insl(uint16_t port, void *addr, unsigned long count) {
                    ^
ide.c:76:9: warning: passing argument 2 of ‘insl’ makes pointer from integer without a cast [enabled by default]
         insl(channels[channel].base + reg - 0x06, buffer, quads);
         ^
ide.c:56:20: note: expected ‘void *’ but argument is of type ‘unsigned int’
 static inline void insl(uint16_t port, void *addr, unsigned long count) {
                    ^
ide.c:78:9: warning: passing argument 2 of ‘insl’ makes pointer from integer without a cast [enabled by default]
         insl(channels[channel].ctrl + reg - 0x0A, buffer, quads);
         ^
ide.c:56:20: note: expected ‘void *’ but argument is of type ‘unsigned int’
 static inline void insl(uint16_t port, void *addr, unsigned long count) {
                    ^
ide.c:80:9: warning: passing argument 2 of ‘insl’ makes pointer from integer without a cast [enabled by default]
         insl(channels[channel].bmide + reg - 0x0E, buffer, quads);
         ^
ide.c:56:20: note: expected ‘void *’ but argument is of type ‘unsigned int’
 static inline void insl(uint16_t port, void *addr, unsigned long count) {
                    ^
ide.c: In function ‘ide_initialize’:
ide.c:276:13: warning: pointer targets in passing argument 1 of ‘puts_’ differ in signedness [-Wpointer-sign]
             puts(ide_devices[i].model);
             ^
In file included from ./include/system.h:4:0,
                 from ./include/ide.h:8,
                 from ide.c:5:
./include/screen.h:48:5: note: expected ‘const char *’ but argument is of type ‘unsigned char *’
 int puts_(const char str[]);
     ^
ide.c: In function ‘ide_ata_access’:
ide.c:358:13: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
             if (err = ide_polling(channel, 1))
             ^
ide.c:364:13: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
             if (err = ide_polling(channel, 1))
             ^
ide.c:284:19: warning: variable ‘lba_io’ set but not used [-Wunused-but-set-variable]
     unsigned char lba_io[6];
                   ^
ide.c: In function ‘ide_read_sectors’:
ide.c:409:23: warning: variable ‘err’ set but not used [-Wunused-but-set-variable]
         unsigned char err;
                       ^
In file included from ./include/ide.h:8:0,
                 from ide.c:5:
ide.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
ide.c:12:22: warning: ‘atapi_packet’ defined but not used [-Wunused-variable]
 unsigned static char atapi_packet[12] = {0xA8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
                      ^
ide.c: In function ‘ide_read’:
ide.c:53:5: warning: ‘result’ may be used uninitialized in this function [-Wmaybe-uninitialized]
     return result;
     ^
In file included from ./include/catmfs.h:10:0,
                 from catmfs.c:5:
./include/fs_node.h:18:40: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef uint32_t (*read_type_t)(struct fs_node *, uint32_t, uint32_t, uint8_t *);
                                        ^
./include/fs_node.h:18:40: warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
./include/fs_node.h:20:41: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef uint32_t (*write_type_t)(struct fs_node *, uint32_t, uint32_t, uint8_t *);
                                         ^
./include/fs_node.h:22:36: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef void (*open_type_t)(struct fs_node *);
                                    ^
./include/fs_node.h:24:37: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef void (*close_type_t)(struct fs_node *);
                                     ^
./include/fs_node.h:26:49: warning: ‘struct fs_node’ declared inside parameter list [enabled by default]
 typedef struct dirent *(*readdir_type_t)(struct fs_node *, uint32_t);
                                                 ^
catmfs.c: In function ‘catmfs_init’:
catmfs.c:20:5: warning: passing argument 1 of ‘puthex’ makes integer from pointer without a cast [enabled by default]
     dumphex("data magic a:", data_magic_a);
     ^
In file included from ./include/system.h:4:0,
                 from ./include/catmfs.h:8,
                 from catmfs.c:5:
./include/screen.h:54:6: note: expected ‘uint32_t’ but argument is of type ‘uint32_t *’
 void puthex(uint32_t n);
      ^
catmfs.c: In function ‘catmfs_read_inner’:
catmfs.c:39:9: warning: passing argument 2 of ‘memcpy’ makes pointer from integer without a cast [enabled by default]
         return (uint32_t) memcpy(buff, saddr, fs_obj->length - offset);
         ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘uint32_t’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
catmfs.c:41:9: warning: passing argument 2 of ‘memcpy’ makes pointer from integer without a cast [enabled by default]
         return (uint32_t) memcpy(buff, saddr, size);
         ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘uint32_t’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
catmfs.c: In function ‘catmfs_create_fs_node’:
catmfs.c:56:5: warning: passing argument 1 of ‘memset’ from incompatible pointer type [enabled by default]
     memset(node, 0, sizeof(fs_node_t));
     ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:66:23: note: expected ‘unsigned char *’ but argument is of type ‘struct fs_node_t *’
 extern unsigned char *memset(unsigned char *dest, unsigned char val, int count);
                       ^
catmfs.c:57:5: warning: pointer targets in passing argument 1 of ‘memcpy’ differ in signedness [-Wpointer-sign]
     memcpy(node->name, fs_obj->name, 256);
     ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:62:23: note: expected ‘unsigned char *’ but argument is of type ‘char *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
catmfs.c:57:5: warning: pointer targets in passing argument 2 of ‘memcpy’ differ in signedness [-Wpointer-sign]
     memcpy(node->name, fs_obj->name, 256);
     ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘char *’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
catmfs.c:60:16: warning: assignment from incompatible pointer type [enabled by default]
     node->read = catmfs_read;
                ^
catmfs.c:61:17: warning: assignment from incompatible pointer type [enabled by default]
     node->write = catmfs_write;
                 ^
catmfs.c: In function ‘catmfs_findbyname’:
catmfs.c:71:17: warning: passing argument 1 of ‘catmfs_create_fs_node’ from incompatible pointer type [enabled by default]
                 *fs_node_out = catmfs_create_fs_node(table->objects[x].name);
                 ^
catmfs.c:49:12: note: expected ‘struct catmfs_obj_t *’ but argument is of type ‘char *’
 fs_node_t *catmfs_create_fs_node(catmfs_obj_t *fs_obj) {
            ^
In file included from ./include/catmfs.h:8:0,
                 from catmfs.c:5:
catmfs.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
proc.c: In function ‘create_user_stack’:
proc.c:9:5: warning: implicit declaration of function ‘strformat’ [-Wimplicit-function-declaration]
     putf_const("creating user stack:%x %x\n", start_addr, size);
     ^
proc.c:30:19: warning: initialization makes pointer from integer without a cast [enabled by default]
     uint32_t *p = new_stack_pointer;
                   ^
proc.c:31:5: warning: passing argument 1 of ‘memcpy’ makes pointer from integer without a cast [enabled by default]
     memcpy(new_stack_pointer, old_stack_pointer, init_esp - old_stack_pointer);
     ^
In file included from ./include/page.h:8:0,
                 from ./include/proc.h:9,
                 from proc.c:5:
./include/system.h:62:23: note: expected ‘unsigned char *’ but argument is of type ‘uint32_t’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
proc.c:31:5: warning: passing argument 2 of ‘memcpy’ makes pointer from integer without a cast [enabled by default]
     memcpy(new_stack_pointer, old_stack_pointer, init_esp - old_stack_pointer);
     ^
In file included from ./include/page.h:8:0,
                 from ./include/proc.h:9,
                 from proc.c:5:
./include/system.h:62:23: note: expected ‘const unsigned char *’ but argument is of type ‘uint32_t’
 extern unsigned char *memcpy(unsigned char *dest, const unsigned char *src, int count);
                       ^
proc.c:30:15: warning: unused variable ‘p’ [-Wunused-variable]
     uint32_t *p = new_stack_pointer;
               ^
In file included from ./include/page.h:8:0,
                 from ./include/proc.h:9,
                 from proc.c:5:
proc.c: At top level:
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
 extern inline const char *itoa(int i, char result[]);
                           ^
./include/system.h:72:27: warning: inline function ‘itoa’ declared but never defined [enabled by default]
